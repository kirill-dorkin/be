#!/usr/bin/env node

import { execSync } from 'child_process';
import { rmSync, existsSync } from 'fs';
import path from 'path';

console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã SWC helpers...');

// –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–µ–π Next.js
const cachePaths = [
  '.next',
  'node_modules/.cache',
  '.swc',
];

for (const cachePath of cachePaths) {
  if (existsSync(cachePath)) {
    console.log(`üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ –∫—ç—à–∞: ${cachePath}`);
    rmSync(cachePath, { recursive: true, force: true });
  }
}

console.log('‚úÖ –ö—ç—à–∏ –æ—á–∏—â–µ–Ω—ã');

// –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π SWC
console.log('üì¶ –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ SWC –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...');
try {
  execSync('npm uninstall @swc/core @swc/helpers', { stdio: 'inherit' });
  execSync('npm install @swc/core@latest @swc/helpers@latest', { stdio: 'inherit' });
  console.log('‚úÖ SWC –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
} catch (error) {
  console.log('‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–µ SWC, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...');
}

console.log('üöÄ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ: npm run dev:standard');